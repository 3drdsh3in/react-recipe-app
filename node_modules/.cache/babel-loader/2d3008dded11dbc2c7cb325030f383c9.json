{"ast":null,"code":"import _slicedToArray from \"/Users/vip/Desktop/github projects/react-recipe-app/recipe-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vip/Desktop/github projects/react-recipe-app/recipe-app/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\nimport uuidv4 from 'uuid/v4';\n\nfunction App() {\n  const APP_ID = '018e8d91';\n  const APP_KEY = '718ccd39473ab51ffe8b4891fdd70515'; // Recipes is an empty array:\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1]; // Search bar empty array:\n\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        search = _useState4[0],\n        setSearch = _useState4[1];\n\n  const _useState5 = useState('chicken'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        query = _useState6[0],\n        setQuery = _useState6[1];\n\n  useEffect(() => {\n    // Get the recipes upon page load by default & when the form is submitted\n    console.log('fetch');\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`); // Formats repsonse data into a workable manner:\n\n    const data = await response.json(); // \n\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const getSearch = e => {\n    // Prevents Page refresh when the form is submitted\n    e.preventDefault(); // Set query variable to whatever is in the search bar\n\n    setQuery(search);\n    setSearch('');\n  }; // QUESTION\n  // Does react tell this function declaration that the 'e' variable is a reference to the input field?\n\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(e.target.value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"search-bar\",\n    type: \"text\",\n    value: search,\n    onChange: updateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"search-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Search\")), recipes.map(recipe => React.createElement(Recipe, {\n    key: uuidv4(),\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vip/Desktop/github projects/react-recipe-app/recipe-app/src/App.js"],"names":["React","useEffect","useState","Recipe","uuidv4","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","console","log","getRecipes","response","fetch","data","json","hits","getSearch","e","preventDefault","updateSearch","target","value","map","recipe","label","calories","image","ingredients"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,SAAnB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,OAAO,GAAG,kCAAhB,CAFa,CAIb;;AAJa,oBAKiBL,QAAQ,CAAC,EAAD,CALzB;AAAA;AAAA,QAKNM,OALM;AAAA,QAKGC,UALH,kBAMb;;;AANa,qBAOeP,QAAQ,CAAC,EAAD,CAPvB;AAAA;AAAA,QAONQ,MAPM;AAAA,QAOEC,SAPF;;AAAA,qBAQaT,QAAQ,CAAC,SAAD,CARrB;AAAA;AAAA,QAQNU,KARM;AAAA,QAQCC,QARD;;AAUbZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,IAAAA,UAAU;AACX,GAJQ,EAIN,CAACJ,KAAD,CAJM,CAAT;;AAMA,QAAMI,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCN,KAAM,WAAUN,MAAO,YAAWC,OAAQ,EAA9E,CAA5B,CAD6B,CAE7B;;AACA,UAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAH6B,CAK7B;;AACAX,IAAAA,UAAU,CAACU,IAAI,CAACE,IAAN,CAAV;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACE,IAAjB;AACD,GARD;;AAUA,QAAMC,SAAS,GAAGC,CAAC,IAAI;AACrB;AACAA,IAAAA,CAAC,CAACC,cAAF,GAFqB,CAGrB;;AACAX,IAAAA,QAAQ,CAACH,MAAD,CAAR;AACAC,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAND,CA1Ba,CAkCb;AACA;;;AACA,QAAMc,YAAY,GAAGF,CAAC,IAAI;AACxBZ,IAAAA,SAAS,CAACY,CAAC,CAACG,MAAF,CAASC,KAAV,CAAT;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACG,MAAF,CAASC,KAArB;AACD,GAHD;;AAKA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAM,IAAA,QAAQ,EAAEL,SAAhB;AAA2B,IAAA,SAAS,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,IAAI,EAAC,MAAnC;AAA0C,IAAA,KAAK,EAAEZ,MAAjD;AAAyD,IAAA,QAAQ,EAAEe,YAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAFF,EAQGjB,OAAO,CAACoB,GAAR,CAAYC,MAAM,IACjB,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEzB,MAAM,EADb;AAEE,IAAA,KAAK,EAAEyB,MAAM,CAACA,MAAP,CAAcC,KAFvB;AAGE,IAAA,QAAQ,EAAED,MAAM,CAACA,MAAP,CAAcE,QAH1B;AAIE,IAAA,KAAK,EAAEF,MAAM,CAACA,MAAP,CAAcG,KAJvB;AAKE,IAAA,WAAW,EAAEH,MAAM,CAACA,MAAP,CAAcI,WAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CARH,CADF,CADF;AAuBD;;AAED,eAAe5B,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\nimport uuidv4 from 'uuid/v4';\n\nfunction App() {\n  const APP_ID = '018e8d91';\n  const APP_KEY = '718ccd39473ab51ffe8b4891fdd70515';\n\n  // Recipes is an empty array:\n  const [recipes, setRecipes] = useState([]);\n  // Search bar empty array:\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n\n  useEffect(() => {\n    // Get the recipes upon page load by default & when the form is submitted\n    console.log('fetch')\n    getRecipes();\n  }, [query])\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    // Formats repsonse data into a workable manner:\n    const data = await response.json();\n\n    // \n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const getSearch = e => {\n    // Prevents Page refresh when the form is submitted\n    e.preventDefault();\n    // Set query variable to whatever is in the search bar\n    setQuery(search)\n    setSearch('');\n  }\n\n  // QUESTION\n  // Does react tell this function declaration that the 'e' variable is a reference to the input field?\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(e.target.value)\n  }\n\n  return (\n    <>\n      <div className='App'>\n        {/* Good Practise to add classNames in react. */}\n        <form onSubmit={getSearch} className=\"search-form\">\n          <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\n          <button className=\"search-button\" type=\"submit\">\n            Search\n          </button>\n        </form>\n        {recipes.map(recipe => (\n          <Recipe\n            key={uuidv4()}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        )\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}