{"version":3,"sources":["Recipe.js","App.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","key","uuidv4","className","style","recipe","src","alt","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","console","log","getRecipes","a","async","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","label","ReactDOM","render","document","getElementById","module","exports"],"mappings":"8NAmBeA,EAfA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACtC,OACI,yBAAKC,IAAKC,MAAUC,UAAWC,IAAMC,QACjC,wBAAIJ,IAAKC,OAAWL,GACpB,uBAAGI,IAAKC,OAAR,aAA6BJ,GAC7B,yBAAKK,UAAWC,IAAML,MAAOO,IAAKP,EAAOQ,IAAI,eAAeN,IAAKC,QACjE,wBAAID,IAAKC,OACJF,EAAYQ,KAAI,SAAAC,GAAU,OACvB,wBAAIR,IAAKC,OAAWO,EAAWC,YC2DpCC,MAnEf,WACE,IADa,EAKiBC,mBAAS,IAL1B,mBAKNC,EALM,KAKGC,EALH,OAOeF,mBAAS,IAPxB,mBAONG,EAPM,KAOEC,EAPF,OAQaJ,mBAAS,WARtB,mBAQNK,EARM,KAQCC,EARD,KAUbC,qBAAU,WAERC,QAAQC,IAAI,SACZC,MACC,CAACL,IAEJ,IAAMK,EAAa,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACME,MAAM,mCAAD,OAAoCR,EAApC,mBAhBf,WAgBe,oBAfd,sCAcG,cACXS,EADW,kBAAAH,EAAA,MAGEG,EAASC,QAHX,OAGXC,EAHW,OAMjBd,EAAWc,EAAKC,MAChBT,QAAQC,IAAIO,EAAKC,MAPA,sCAyBnB,OACE,oCACE,yBAAK1B,UAAU,OAEb,0BAAM2B,SAnBM,SAAAC,GAEhBA,EAAEC,iBAEFd,EAASH,GACTC,EAAU,KAcqBb,UAAU,eACnC,2BAAOA,UAAU,aAAa8B,KAAK,OAAOC,MAAOnB,EAAQoB,SAV5C,SAAAJ,GACnBf,EAAUe,EAAEK,OAAOF,OACnBd,QAAQC,IAAIU,EAAEK,OAAOF,UASf,4BAAQ/B,UAAU,gBAAgB8B,KAAK,UAAvC,WAIF,yBAAK9B,UAAU,WACZU,EAAQL,KAAI,SAAAH,GAAM,OACjB,kBAAC,EAAD,CACEJ,IAAKC,MACLL,MAAOQ,EAAOA,OAAOgC,MACrBvC,SAAUO,EAAOA,OAAOP,SACxBC,MAAOM,EAAOA,OAAON,MACrBC,YAAaK,EAAOA,OAAOL,qB,MCzDzCsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB","file":"static/js/main.ec002c36.chunk.js","sourcesContent":["import React from 'react';\nimport style from './recipe.module.css';\nimport uuidv4 from 'uuid/v4';\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n    return (\n        <div key={uuidv4()} className={style.recipe}>\n            <h1 key={uuidv4()}>{title}</h1>\n            <p key={uuidv4()}>Calories: {calories}</p>\n            <img className={style.image} src={image} alt=\"recipe_image\" key={uuidv4()} />\n            <ol key={uuidv4()}>\n                {ingredients.map(ingredient => (\n                    <li key={uuidv4()}>{ingredient.text}</li>\n                ))}\n            </ol>\n        </div>\n    );\n}\n\nexport default Recipe;","import React, { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\nimport uuidv4 from 'uuid/v4';\n\nfunction App() {\n  const APP_ID = '018e8d91';\n  const APP_KEY = '718ccd39473ab51ffe8b4891fdd70515';\n\n  // Recipes is an empty array:\n  const [recipes, setRecipes] = useState([]);\n  // Search bar empty array:\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n\n  useEffect(() => {\n    // Get the recipes upon page load by default & when the form is submitted\n    console.log('fetch')\n    getRecipes();\n  }, [query])\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    // Formats repsonse data into a workable manner:\n    const data = await response.json();\n\n    // \n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const getSearch = e => {\n    // Prevents Page refresh when the form is submitted\n    e.preventDefault();\n    // Set query variable to whatever is in the search bar\n    setQuery(search)\n    setSearch('');\n  }\n\n  // QUESTION\n  // Does react tell this function declaration that the 'e' variable is a reference to the input field?\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    console.log(e.target.value)\n  }\n\n  return (\n    <>\n      <div className='App'>\n        {/* Good Practise to add classNames in react. */}\n        <form onSubmit={getSearch} className=\"search-form\">\n          <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\n          <button className=\"search-button\" type=\"submit\">\n            Search\n          </button>\n        </form>\n        <div className='recipes'>\n          {recipes.map(recipe => (\n            <Recipe\n              key={uuidv4()}\n              title={recipe.recipe.label}\n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\",\"image\":\"recipe_image__BtdIE\"};"],"sourceRoot":""}